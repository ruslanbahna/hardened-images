name: hardened-photon-publish

on: 
  workflow_run:
    workflows: ["hardened-photon-test"]
    types: [completed]
    branches: [main]

env:
  IMAGE_NAME: hardened-photon 
  IMAGE_PATH: ${{vars.REGISTRY}}/${{ github.repository }}/hardened-photon
  DOCKER_CONTENT_TRUST: 1
  BASE_IMAGE: photon:latest

jobs:
  publish-hardened-dockerfile:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          path: container-images

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get OS version
        env:
          DOCKER_CONTENT_TRUST: 0
        id: GetVersion
        run: |
          major_minor=$(docker run  ${{ env.BASE_IMAGE }} lsb_release --short --release)
          echo "major_minor=photon-$major_minor" >> $GITHUB_OUTPUT

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: ./container-images
          file: ./container-images/${{ env.IMAGE_NAME }}/Dockerfile
          load: true
          tags: |
            ${{ env.IMAGE_PATH }}:${{ steps.GetVersion.outputs.major_minor}}.${{github.run_number}}
            ${{ env.IMAGE_PATH }}:${{ steps.GetVersion.outputs.major_minor}}
            ${{ env.IMAGE_PATH }}:latest

      - uses: ruslanbahna/reusable-actions/container-image-size@v0.0.4
        env: 
          DOCKER_CONTENT_TRUST: 0
        with:
          built-image: ${{ env.IMAGE_PATH}}:${{ steps.GetVersion.outputs.major_minor}}.${{github.run_number}}
          base-image: ${{ env.BASE_IMAGE }}
    
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./container-images
          file: ./container-images/${{ env.IMAGE_NAME }}/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_PATH }}:${{ steps.GetVersion.outputs.major_minor}}.${{github.run_number}}
            ${{ env.IMAGE_PATH }}:${{ steps.GetVersion.outputs.major_minor}}
            ${{ env.IMAGE_PATH }}:latest